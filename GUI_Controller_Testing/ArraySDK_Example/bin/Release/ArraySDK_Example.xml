<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ArraySDK_Example</name>
    </assembly>
    <members>
        <member name="F:ArraySDK_Example.FormCamera.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ArraySDK_Example.FormCamera.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ArraySDK_Example.FormCamera.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ArraySDK_Example.formFoot.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ArraySDK_Example.formFoot.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ArraySDK_Example.formFoot.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:ArraySDK_Example.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:ArraySDK_Example.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:ArraySDK_Example.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:SDK_Example.FormMessage">
            <summary>
            Represents a message form. Displays message defined by MessageClass
            </summary>
        </member>
        <member name="F:SDK_Example.FormMessage.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SDK_Example.FormMessage.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SDK_Example.FormMessage.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SDK_Example.formScan2D">
            <summary>
            represents the Main Form to display the US image.
            </summary>
        </member>
        <member name="F:SDK_Example.formScan2D.bImgExt">
            <summary>
            TO BE DONE
            Image extension Should be adapted to the new array probe since it's very dark as is.
            </summary>
            UScanGuide
        </member>
        <member name="F:SDK_Example.formScan2D.bmpUSImage">
            <summary>
            bytRawImage will be passed by reference to the Dll to receive the US image
            </summary>
        </member>
        <member name="F:SDK_Example.formScan2D.bytRawImageRef">
            <summary>
            pass by reference to the dll
            </summary>
        </member>
        <member name="F:SDK_Example.formScan2D.bytRawImage">
            <summary>
            Current data
            </summary>
        </member>
        <member name="F:SDK_Example.formScan2D.bytRawImagePrevious">
            <summary>
            to keep track of the previous data, to use it when needs
            </summary>
        </member>
        <member name="F:SDK_Example.formScan2D.aushRawRF">
            <summary>
            RF Current Data
            </summary>
        </member>
        <member name="F:SDK_Example.formScan2D.aptRFdata">
            <summary>
            RF Curve
            </summary>
        </member>
        <member name="F:SDK_Example.formScan2D.abytRawCFM">
            <summary>
            CFM Current Data
            </summary>
        </member>
        <member name="F:SDK_Example.formScan2D.aushRawCFM">
            <summary>
            CFM: RF raw data
            </summary>
        </member>
        <member name="F:SDK_Example.formScan2D.iCineCounter">
            <summary>
            Cineloop
            </summary>
            
        </member>
        <member name="F:SDK_Example.formScan2D.MaxCine">
            current index of the loop
        </member>
        <member name="F:SDK_Example.formScan2D.bCineOn">
            Number of Images saved in the loop
        </member>
        <member name="F:SDK_Example.formScan2D.ByteArrayList">
            Play/Stop
        </member>
        <member name="F:SDK_Example.formScan2D.ushortArrayList">
            Container of the Cineloop
        </member>
        <member name="F:SDK_Example.formScan2D.ByteUniArrayList">
            Container of the cineloop for RF Data
        </member>
        <member name="F:SDK_Example.formScan2D.ushortUniArrayList">
            Container of the cineloop for CFM Data
        </member>
        <member name="F:SDK_Example.formScan2D.trdCineShow">
            Container of the cineloop for CFM Data (RF)
        </member>
        <member name="F:SDK_Example.formScan2D.stopWatch">
            Thread when play the cineloop
        </member>
        <member name="F:SDK_Example.formScan2D.strNotConnected">
            Timer for the FrameRate
            probes connected
        </member>
        <member name="F:SDK_Example.formScan2D.bmpLoad">
            intermediate Bitmap used to Save/Load to file
        </member>
        <member name="F:SDK_Example.formScan2D.shIdleId">
            Probe Id of the saved/loaded image 
        </member>
        <member name="F:SDK_Example.formScan2D.bIdle">
            Flag to indentify Idle mode
        </member>
        <member name="F:SDK_Example.formScan2D.iIdleWidth">
            "Idle" Scan Converter 
        </member>
        <member name="F:SDK_Example.formScan2D.iMaxDepthIndex">
            <summary>
             Define the array of Depths for each probe. Array is not mandatory. 
            </summary>
        </member>
        <member name="F:SDK_Example.formScan2D.aiFreq">
            <summary>
            Define the array of Frequencies - mandatory
            </summary>
        </member>
        <member name="F:SDK_Example.formScan2D.aiFocus">
            <summary>
            Define the array of Focus - mandatory
            </summary>
        </member>
        <member name="F:SDK_Example.formScan2D.abytHighVoltage">
            <summary>
            Define the array of HighVoltage, values are a percentage of the highest voltage. Array is not mandatory.
            </summary>
        </member>
        <member name="F:SDK_Example.formScan2D.DIG_GAIN_MIN">
            <summary>
             Software TGC 
            </summary>
        </member>
        <member name="F:SDK_Example.formScan2D.iDynamicIndex">
            <summary>
            Dynamic and Anti-Log
            </summary>
        </member>
        <member name="F:SDK_Example.formScan2D.comPort">
            <summary>
            this for communicating with SerialPort
            </summary>
        </member>
        <member name="F:SDK_Example.formScan2D.hasProbe">
            <summary>
            Checks if the robot has the probe
            </summary>
        </member>
        <member name="F:SDK_Example.formScan2D.astrSC">
            <summary>
            Define the choices of the sizes of the Scan Converter
            </summary>
        </member>
        <member name="F:SDK_Example.formScan2D.bInitDone">
            <summary>
            Define the 2 classes for the ScanConverter: Scan2DClass and ScanConverter
            </summary>
        </member>
        <member name="F:SDK_Example.formScan2D.MyHwControls">
            <summary>
            get an Instance of HWControls
            </summary>
        </member>
        <member name="F:SDK_Example.formScan2D.ZoomBox">
            <summary>
            define the Class for the zoom. ZoomBoxClass is included in the ToolsLibrary
            </summary>
        </member>
        <member name="F:SDK_Example.formScan2D.colBox">
            <summary>
             Color
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.formScan2D_Load(System.Object,System.EventArgs)">
            <summary>
            To load the main form
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:SDK_Example.formScan2D.Version">
            <summary>
            File Version
            </summary>
        </member>
        <member name="P:SDK_Example.formScan2D.ShortVersion">
            <summary>
            File Version
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.EnableIdle">
            <summary>
            Enables idle mode
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.DisableIdle">
            <summary>
            Disables idle mode
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.SetSelectedProbe">
            <summary>
            Sets up the probe that has been connected to the computer. 
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.UpdateCineloopGroup(System.Boolean)">
            <summary>
            To enable or disable Cineloop buttons
            </summary>
            <param name="enable"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.UpdateButtons">
            <summary>
            Updates all the buttons.
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.UpdateLabels">
            <summary>
            To update all the labels
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.ResetLabels">
            <summary>
            To reset all the labels, no value displayed, just the title
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.UpdateTrackBar">
            <summary>
            Updates the Track bars
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.InitControlPlusMinus">
            <summary>
            To initialize the PlusMinus controls
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.formScan2D_FormClosed(System.Object,System.Windows.Forms.FormClosedEventArgs)">
            <summary>
            To close the main form 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.InitScan">
            <summary>
            To initialize a new scan, called when Scan Starts
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.RebuildScanConverter">
            <summary>
            To recalculate the ScanConverter when a parameter has changed, ex: Depth, Zoom
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.RebuildAll">
            <summary>
            idem RebuildScanConverter + SetFrequencyAndFocus 
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.buttonScan_Click(System.Object,System.EventArgs)">
            <summary>
            to Start/Stop the Acquisition and scan
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.StartScan">
            <summary>
            Call to start scan
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.StopScan">
            <summary>
            Call to stop scan
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.StartThreadScan">
            <summary>
            Start the Acquisition and scan
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.StopThreadScan">
            <summary>
            to Stop the Acquisition and scan
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.TgcCurve">
            <summary>
            Defines the Time Gain Compensation.
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.ApplyTgc(System.Byte[0:,0:])">
            <summary>
            Applies Time Gain Compensation for the probe.
            </summary>
            <param name="arrayByte"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.DepthPlus">
            <summary>
            To increase the Depth
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.DepthMinus">
            <summary>
            To decrease the Depth
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.FreqPlus">
            <summary>
            To increase the frequency
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.HighPlus">
            <summary>
            To increase the High Voltage
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.HighMinus">
            <summary>
            To decrease the High Voltage
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.ImagPlus">
            <summary>
            To increase the High Voltage
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.ImageRefresh(System.Object,System.EventArgs)">
            <summary>
            Starts a new thread when a new thread is available
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.StartRefresh">
            <summary>
            Capturing the current image.
            Calls DoRefresh to draw the graphics.
            Calls AddToCine to save the images into ByteArrayList
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.DoRefresh">
            <summary>
            To refresh uctrlscan, container of the US image.
            Drawing the graphics.
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.DrawCurve(System.Int32,System.Int32,System.Int32)">
            <summary>
            to Draw the RF curve
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="factor"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.BuildRFData(System.UInt16[0:,0:],System.Int32)">
            <summary>
            to calculate the points of the curve, Display one line of the RF data
            </summary>
            <param name="aushBuild"></param>
            <param name="factor"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.BuildCFMData(System.UInt16[],System.Int32)">
            <summary>
            to calculate the points of the curve. Display one line of the CFM data (raw data then RF)
            </summary>
            <param name="aushBuild"></param>
            <param name="factor"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.MyMarshalToForm(SDK_Example.formScan2D.ControlEnum,System.String)">
            <summary>
             Enables accessing a form from another thread
            </summary>
            <param name="eCtrl">A enum that points to the control to perform the action</param>
            <param name="textToDisplay">Text that the form displays or uses for 
             another purpose. Actions that don't use text ignore this parameter.</param>
        </member>
        <member name="M:SDK_Example.formScan2D.AccessForm(SDK_Example.formScan2D.ControlEnum,System.String)">
            <summary>
            MarshalToForm
            </summary>
            <param name="eCtrl"></param>
            <param name="formText"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.uctrlGrayScale_Paint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            To display GrayScale.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.formScan2D_Paint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            paint
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.ResetZoom">
            //////////
            To be used with ZoomBoxClass (ToolsLibrary.dll)
            //////////
            <summary>
            To reset the Zoom, back to ZOOM_MIN
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.buttonZoomBox_Click(System.Object,System.EventArgs)">
            <summary>
            Command to reset Zoom
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.MouseResizeBox(System.Int32,System.Int32)">
            <summary>
            Resize the Zoom Box according the mouse coordinates
            </summary>
            <param name="iX"></param>
            <param name="iY"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.uctrlScan_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Command to resize the zoom box
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.InitZoom(System.Int32,System.Int32)">
            <summary>
            To Display the Zoom Box
            </summary>
            <param name="iX"></param>
            <param name="iY"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.uctrlScan_MouseClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Command to display the zoom box
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.ValidateZoomFactor">
            <summary>
            To Validate the ZoomFactor
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.SetZoom">
            <summary>
            set Zoom parameters
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.uctrlScan_MouseDoubleClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Command to validate the Zoom box and set Zoom parameters
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.AddToCine(System.Byte[0:,0:])">
            <summary>
            When scanning, to Add the last Raw data to the List( i.e. cineloop)
            Adds all of the images taken during the scan to ByteArrayList
            </summary>
            <param name="arrayByte"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.AddToCineRF(System.UInt16[0:,0:])">
            <summary>
            When scanning, to Add the last Raw RF data to the List( i.e. cineloop)
            </summary>
            <param name="arrayUshort"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.AddToCineCFM(System.Byte[])">
            <summary>
            When scanning, to Add the last Raw CFM data to the List( i.e. cineloop)
            </summary>
            <param name="arrayByte"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.AddToCineCFM(System.UInt16[])">
            <summary>
            Ushort version
            </summary>
            <param name="arrayUshort"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.StartCineloop">
            <summary>
            To start the cineloop.
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.StopCineloop">
            <summary>
            To stop the cineloop.
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.CineloopSlide">
            <summary>
            Displays the slide "iCineCounter" of the cineloop.
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.DrawOut(System.Int32)">
            <summary>
            Draws the graphics for playing back the cine. 
            </summary>
            <param name="slide"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.CinePlay(System.Object)">
            <summary>
            Plays the cineloop.
            </summary>
            <param name="FrameRateMilliSeconds"> frame Rate of the probe</param>
        </member>
        <member name="M:SDK_Example.formScan2D.NextImage">
            <summary>
            Outside of the thread of the cineloop, to display the next image
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.PreviousImage">
            <summary>
            Outside of the thread of the cineloop, to display the previous image.
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.chkboxUpDown_CheckedChanged(System.Object,System.EventArgs)">
            <summary>
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.SetUItoCFM(System.Boolean)">
            <summary>
            Sets UI into CFM mode.
            </summary>
            <param name="bcfm"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.DoSaveScan">
            <summary>
            Returns a bitmap to save.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SDK_Example.formScan2D.DoSaveRaw(System.String)">
            <summary>
            Save the raw data: 
            2 files ImageName.raw with the Raw Data, ImageName.dat with the minimum charateristics to retrieve 
            the image: depth, up/down, left/right, size of ScanConverter, (Index of ScanConverter), ProbeID
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.WriteData(System.IO.BinaryWriter,System.IO.FileStream)">
            <summary>
            Write a binary file with the values from Depth, Frequency, etc
            </summary>
            <param name="bwrtFile"></param>
            <param name="writer"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.DoLoadRaw(System.String)">
            <summary>
            Load the raw data.
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.ReadData(System.IO.BinaryReader,System.IO.FileStream)">
            <summary>
            Reads data.txt file so redraw the depth scale
            </summary>
            <param name="brdFile"></param>
            <param name="reader"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.ShowDisplayControls">
            <summary>
            Displays the controls when not in idle mode
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.HideDisplayControls">
            <summary>
            Hides display controls in idle mode
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.DoClear">
            <summary>
            Sets the graphics object to a new instance
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.uctrlDepth_Paint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            Draws the Depth scale.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.WatchHWButton(IntersonArray.Controls.HWControls,System.EventArgs)">
            <summary>
            To watch the Hardware Button, Event is raised when Button is released
            </summary>
            <param name="HwCtrl"></param>
            <param name="e"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.ResizeForm(System.Int32)">
            <summary>
            Resizes the form.
            However, currently set up so that the form can't resize.
            </summary>
            <param name="i"></param>
        </member>
        <member name="F:SDK_Example.formScan2D.bTimerConnect">
            <summary>
            Watch the USB connections:
            The timer is disabled when scanning, then enabled when idle.
            The interval of the timer is 500ms
            This example has two buttons to reflect the connections of the USB connectors. 
            The name of each probe is printed inside the button. Push the button to switch probes.
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.EnableConnect">
            <summary>
            To Start watching the USB connections
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.DisableConnect">
            <summary>
            To Stop watching the USB connections
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.WatchConnect(System.Object,System.EventArgs)">
            <summary>
            Initializes/clears HWControls
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.SwitchProbe(System.Int32)">
            <summary>
            Switches from one probe to another if there are multiple probes attached 
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.UpdateProbesButtons">
            <summary>
            Does nothing?
            </summary>
        </member>
        <member name="F:SDK_Example.formScan2D._deviceRemovedWatcher">
            <summary>
            Another way to check the connections. this is the one used
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.AddDeviceArrivedHandler">
             <summary>
             Add a handler to detect arrival of devices.
             </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.AddDeviceRemovedHandler">
             <summary>
             Add a handler to detect removal of devices.
             </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.DeviceAdded(System.Object,System.Management.EventArrivedEventArgs)">
             <summary>
             Called on arrival of any device.
             Calls a routine that searches to see if the desired device is present.
             </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.DeviceNotificationsStart">
             <summary>
             Add handlers to detect device arrival and removal.
             </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.DeviceNotificationsStop">
             <summary>
             Stop receiving notifications about device arrival and removal
             </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.DeviceRemoved(System.Object,System.EventArgs)">
             <summary>
             Called on removal of any device.
             Calls a routine that searches to see if the desired device is still present.
             </summary>
            
        </member>
        <member name="M:SDK_Example.formScan2D.CheckProbes">
            <summary>
            Checks if the probe is currently connected to the computer
            </summary>
        </member>
        <member name="F:SDK_Example.formScan2D.bRobotTimerConnect">
            <summary>
            Watch the comPort motor connections:
            The timer is disabled when the motor is connected.
            The interval of the timer is 500ms
            Modelled after the USB probe watch timer
            A different timer runs when the motor is connected to listen for communications with the motor
            We use two different timers to allow for different time intervals
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.EnableRobotConnectTimer">
            <summary>
            To Start watching the SerialPort connections
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.DisableRobotConnectTimer">
            <summary>
            To Stop watching the Serial Port connections
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.portTest">
            <summary>
            Calls getComPortList to generate a list of comports
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.WatchRobotConnect(System.Object,System.EventArgs)">
            <summary>
            Watches for when the robot connects
            When the robot does connect, it enables the robot listener and disables the robot connect timer
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.checkForQueryResponse">
            <summary>
            Copy of robotListenerTimer_Tick but just accepts responses to the initial query
            </summary>
            <returns></returns>
        </member>
        <member name="F:SDK_Example.formScan2D.preferredNames">
            <summary>
            getComPortList
            hard-coding of 4, 5 and 7 as preferred comPorts
            workaround to prevent getting stuck on a virtual comPort
            this shouldn't be necessary now that we are querying the comport
            before accepting it as the correct on
            But no harm in keeping it in?
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.getComPortList">
            <summary>
            Adds strings of comport names to comPortsList
            Always returns true
            </summary>
            <returns></returns>
        </member>
        <member name="M:SDK_Example.formScan2D.openComPort(System.String)">
            <summary>
            Opens a comport
            </summary>
            <param name="comPortName"></param>
            <returns></returns>
        </member>
        <member name="F:SDK_Example.formScan2D.bRobotListenerTimer">
            <summary>
            Timer that listens for communications from the motor
            The timer is disabled when the motor is disconnected.
            The interval of the timer is 100ms
            A different timer runs when the motor is disconnected to listen for motor reconnection
            We use two different timers to allow for different time intervals
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.EnableRobotListener">
            <summary>
            To Listen for communications from the robot
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.DisableRobotListener">
            <summary>
            Stops Listening for communications from the robot
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.RobotListenerTimer_Tick(System.Object,System.EventArgs)">
            <summary>
            Tells the scanner and robot what to do according to what the Arduino sends to the computer
            MaxSteps and CurSteps are counted here
            MaxCine is later set to MaxSteps, size of the ArrayList holding all of the images in a scan is set to MaxCine
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.writeResponseCodes">
            <summary>
            Saves a log file of what the Arduino sends back to the computer
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.SetButtonForRobotState(SDK_Example.formScan2D.RobotStateEnum)">
            <summary>
            Changes the circle indicator on the button "Robot Scan" when the state of the robot changes
            </summary>
            <param name="robotState"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.StopRobot">
            <summary>
            Sends a "l" to the Arduino to stop the robot
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.queryRobotState">
            <summary>
            Sends a "D" to the Arduino to check the robot's state
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.StartRobot">
            <summary>
            Sends an "m" to the Arduino to start the robot
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.rewindRobot">
            <summary>
            Rewinds the robot
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.robotConnectionLost">
            <summary>
            All the things we have to do when the robot disconnects
            But we are not shutting down the robot
            
            Closes the comports
            Sets the robot state to disconnected
            Disables the robot listener
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.setRobotSpeed(System.Int32)">
            <summary>
             Set motor speed to a percentage of maximum
             Max speed is 70 rpm while scanning
             RPM = 2 * Robot_Speed + 20 rpm
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:SDK_Example.formScan2D.baseFileName" -->
        <member name="M:SDK_Example.formScan2D.SaveCameraPictures(System.String)">
            <summary>
            Saves the array of camera images if the array's size is greater than 0
            </summary>
            <param name="bmpPath"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.DoSaveRobotScanDataAsText(System.String)">
            <summary>
            Saves a .txt file that has the values used for Depth, Frequency, High Voltage, Main Gain, Dynamic, Etc
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.DoSaveRobotScanRaw(System.String,System.String,System.String,System.Int32)">
            <summary>
            Save the raw data for one image of the 3D scan: 
            essentially copied from DoSaveRaw but with the .dat part pulled out
            and reads the image from the saved BytArray
            
            Only used to call SaveBmpFromRaw
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.SaveBmpFromRaw(System.Int32,System.String,System.String)">
            <summary>
             copied from DrawOut to create the bmp from a raw file without changing the graphics
            </summary>
            <param name="slide"></param>
            <param name="fileName"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.ProtoButtonRobotScan_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Button Robot Scan
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.ProtoButManRev_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Button Reverse
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.ProtoButManFwd_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Button Forward
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.ProtoButtonLoad_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Button Load
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.ProtoButtonSaveCine_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Button Save Cine
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.ProtoButtonPrevious_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Button Previous
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:SDK_Example.formScan2D.ProtoButtonCine_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Button Cine
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:SDK_Example.formScan2D.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SDK_Example.formScan2D.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SDK_Example.formScan2D.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SDK_Example.structMessage">
            <summary>
            Format of the message
            </summary>
        </member>
        <member name="T:SDK_Example.MessageClass">
            <summary>
            Represents the list of messages
            </summary>
        </member>
        <member name="M:SDK_Example.Program.Main">
            <summary>
            The main entry point for the application.
            </summary>
        </member>
        <member name="F:SDK_Example.UserControlDepth.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SDK_Example.UserControlDepth.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SDK_Example.UserControlDepth.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:SDK_Example.UserControlGrayScale.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SDK_Example.UserControlGrayScale.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SDK_Example.UserControlGrayScale.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:SDK_Example.UserControlPlusMinus.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SDK_Example.UserControlPlusMinus.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SDK_Example.UserControlPlusMinus.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:SDK_Example.UserControlScan.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:SDK_Example.UserControlScan.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SDK_Example.UserControlScan.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:GitHub.secile.Video.UsbCamera.Size">
            <summary>Usb camera image size.</summary>
        </member>
        <member name="P:GitHub.secile.Video.UsbCamera.Start">
            <summary>Start.</summary>
        </member>
        <member name="P:GitHub.secile.Video.UsbCamera.Stop">
            <summary>Stop.</summary>
        </member>
        <member name="P:GitHub.secile.Video.UsbCamera.Release">
            <summary>Release resource.</summary>
        </member>
        <member name="P:GitHub.secile.Video.UsbCamera.GetBitmap">
            <summary>Get image.</summary>
            <remarks>Immediately after starting, fails because image buffer is not prepared yet.</remarks>
        </member>
        <member name="M:GitHub.secile.Video.UsbCamera.FindDevices">
            <summary>
            Get available USB camera list.
            </summary>
            <returns>Array of camera name, or if no device found, zero length array.</returns>
        </member>
        <member name="M:GitHub.secile.Video.UsbCamera.GetVideoFormat(System.Int32)">
            <summary>
            Get video formats.
            </summary>
        </member>
        <member name="M:GitHub.secile.Video.UsbCamera.#ctor(System.Int32,System.Drawing.Size)">
            <summary>
            Create USB Camera. If device do not support the size, default size will applied.
            </summary>
            <param name="cameraIndex">Camera index in FindDevices() result.</param>
            <param name="size">
            Size you want to create. Normally use Size property of VideoFormat in GetVideoFormat() result.
            </param>
        </member>
        <member name="M:GitHub.secile.Video.UsbCamera.#ctor(System.Int32,GitHub.secile.Video.UsbCamera.VideoFormat)">
            <summary>
            Create USB Camera. If device do not support the format, default format will applied.
            </summary>
            <param name="cameraIndex">Camera index in FindDevices() result.</param>
            <param name="format">
            Normally use GetVideoFormat() result.
            You can change TimePerFrame value from Caps.MinFrameInterval to Caps.MaxFrameInterval.
            TimePerFrame = 10,000,000 / frame duration. (ex: 333333 in case 30fps).
            You can change Size value in case Caps.MaxOutputSize > Caps.MinOutputSize and OutputGranularityX/Y is not zero.
            Size = any value from Caps.MinOutputSize to Caps.MaxOutputSize step with OutputGranularityX/Y.
            </param>
        </member>
        <member name="P:GitHub.secile.Video.UsbCamera.Properties">
            <summary>Properties user can adjust.</summary>
        </member>
        <member name="F:GitHub.secile.Video.UsbCamera.PropertyItems.CameraControl">
            <summary>Camera Control properties.</summary>
        </member>
        <member name="F:GitHub.secile.Video.UsbCamera.PropertyItems.VideoProcAmp">
            <summary>Video Processing Amplifier properties.</summary>
        </member>
        <member name="P:GitHub.secile.Video.UsbCamera.PropertyItems.Item(GitHub.secile.Video.DirectShow.CameraControlProperty)">
            <summary>Get CameraControl Property. Check Available before use.</summary>
        </member>
        <member name="P:GitHub.secile.Video.UsbCamera.PropertyItems.Item(GitHub.secile.Video.DirectShow.VideoProcAmpProperty)">
            <summary>Get VideoProcAmp Property. Check Available before use.</summary>
        </member>
        <member name="M:GitHub.secile.Video.UsbCamera.GetBitmapFromSampleGrabberBuffer(GitHub.secile.Video.DirectShow.ISampleGrabber,System.Int32,System.Int32,System.Int32)">
            <summary>Get Bitmap from Sample Grabber Current Buffer</summary>
        </member>
        <member name="M:GitHub.secile.Video.UsbCamera.GetBitmapFromSampleGrabberBufferMain(GitHub.secile.Video.DirectShow.ISampleGrabber,System.Int32,System.Int32,System.Int32)">
            <summary>Get Bitmap from Sample Grabber Current Buffer</summary>
        </member>
        <member name="M:GitHub.secile.Video.UsbCamera.CreateSampleGrabber">
            <summary>
            サンプルグラバを作成する
            </summary>
        </member>
        <member name="M:GitHub.secile.Video.UsbCamera.CreateVideoCaptureSource(System.Int32,GitHub.secile.Video.UsbCamera.VideoFormat)">
            <summary>
            Video Capture Sourceフィルタを作成する
            </summary>
        </member>
        <member name="M:GitHub.secile.Video.UsbCamera.SetVideoOutputFormat(GitHub.secile.Video.DirectShow.IPin,GitHub.secile.Video.UsbCamera.VideoFormat)">
            <summary>
            ビデオキャプチャデバイスの出力形式を選択する。
            </summary>
        </member>
        <member name="M:GitHub.secile.Video.UsbCamera.GetVideoOutputFormat(GitHub.secile.Video.DirectShow.IPin)">
            <summary>
            ビデオキャプチャデバイスがサポートするメディアタイプ・サイズを取得する。
            </summary>
        </member>
        <member name="M:GitHub.secile.Video.UsbCamera.SetVideoOutputFormat(GitHub.secile.Video.DirectShow.IPin,System.Int32,System.Drawing.Size,System.Int64)">
            <summary>
            ビデオキャプチャデバイスの出力形式を選択する。
            事前にGetVideoOutputFormatでメディアタイプ・サイズを得ておき、その中から希望のindexを指定する。
            同時に出力サイズとフレームレートを変更することができる。
            </summary>
            <param name="index">希望のindexを指定する</param>
            <param name="size">Empty以外を指定すると出力サイズを変更する。事前にVIDEO_STREAM_CONFIG_CAPSで取得した可能範囲内を指定すること。</param>
            <param name="timePerFrame">0以上を指定するとフレームレートを変更する。事前にVIDEO_STREAM_CONFIG_CAPSで取得した可能範囲内を指定すること。</param>
        </member>
        <member name="M:GitHub.secile.Video.DirectShow.CoCreateInstance(System.Guid)">
            <summary>COMオブジェクトのインスタンスを作成する。</summary>
        </member>
        <member name="M:GitHub.secile.Video.DirectShow.ReleaseInstance``1(``0@)">
            <summary>COMオブジェクトのインスタンスを開放する。</summary>
        </member>
        <member name="M:GitHub.secile.Video.DirectShow.CreateGraph">
            <summary>フィルタグラフを作成する。</summary>
        </member>
        <member name="M:GitHub.secile.Video.DirectShow.PlayGraph(GitHub.secile.Video.DirectShow.IGraphBuilder,GitHub.secile.Video.DirectShow.FILTER_STATE)">
            <summary>フィルタグラフを再生・停止・一時停止する。</summary>
        </member>
        <member name="M:GitHub.secile.Video.DirectShow.GetFiltes(System.Guid)">
            <summary>フィルタの一覧を取得する。</summary>
        </member>
        <member name="M:GitHub.secile.Video.DirectShow.CreateFilter(System.Guid)">
            <summary>フィルタのインスタンスを作成する。CLSIDで指定する。</summary>
        </member>
        <member name="M:GitHub.secile.Video.DirectShow.CreateFilter(System.Guid,System.Int32)">
            <summary>フィルタのインスタンスを作成する。CategoryとIndexで指定する。</summary>
        </member>
        <member name="M:GitHub.secile.Video.DirectShow.EnumMonikers(System.Guid,System.Func{System.Runtime.InteropServices.ComTypes.IMoniker,GitHub.secile.Video.DirectShow.IPropertyBag,System.Boolean})">
            <summary>モニカを列挙する。</summary>
            <remarks>モニカとはCOMオブジェクトを識別する別名のこと。</remarks>
        </member>
        <member name="M:GitHub.secile.Video.DirectShow.FindPin(GitHub.secile.Video.DirectShow.IBaseFilter,System.String)">
            <summary>ピンを検索する。</summary>
        </member>
        <member name="M:GitHub.secile.Video.DirectShow.FindPin(GitHub.secile.Video.DirectShow.IBaseFilter,System.Int32,GitHub.secile.Video.DirectShow.PIN_DIRECTION)">
            <summary>ピンを検索する。</summary>
        </member>
        <member name="M:GitHub.secile.Video.DirectShow.EnumPins(GitHub.secile.Video.DirectShow.IBaseFilter,System.Func{GitHub.secile.Video.DirectShow.PIN_INFO,System.Boolean})">
            <summary>Pinを列挙する。</summary>
        </member>
        <member name="M:GitHub.secile.Video.DirectShow.ConnectFilter(GitHub.secile.Video.DirectShow.IGraphBuilder,GitHub.secile.Video.DirectShow.IBaseFilter,System.Int32,GitHub.secile.Video.DirectShow.IBaseFilter,System.Int32)">
            <summary>ピンを接続する。</summary>
        </member>
        <member name="M:GitHub.secile.Video.DirectShow.DeleteMediaType(GitHub.secile.Video.DirectShow.AM_MEDIA_TYPE@)">
            <summary>メディアタイプを開放する。</summary>
        </member>
        <member name="T:GitHub.secile.Video.DirectShow.IEnumFilters">
            <summary>
            フィルタ グラフ内のフィルタを列挙するインタフェース.
            </summary>
        </member>
        <member name="M:GitHub.secile.Video.DirectShow.DsGuid.GetNickname(System.Guid)">
            <summary>
            Guidをわかりやすい文字列で返す。
            MEDIATYPE_Videoなら[Video]を返す。PIN_CATEGORY_CAPTUREなら[CATEGORY_CAPTURE]を返す。
            </summary>
        </member>
    </members>
</doc>
